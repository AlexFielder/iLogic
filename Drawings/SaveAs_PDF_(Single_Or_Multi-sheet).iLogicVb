'''Prints the selected sheets to multi-page pdf or single sheet pdf file(s).
Sub Main()
	Dim oDocument As drawingdocument = ThisApplication.ActiveDocument
	Dim oSheets As Sheets
	Dim oSheet As Sheet
	Dim DrawingNumber As String = String.empty
	Dim DrawingTitle As String = String.empty
	Dim DrawingPrefix As String = String.Empty
	Dim oPar As UserParameter
	'Dim shtmaxnum as Integer = Convert.ToInt32(Parameter("Custom_End_Sheet"))
	'MessageBox.Show(shtmaxnum)
	Dim dwgdoc as DrawingDocument = ThisApplication.ActiveDocument
	
	For i = 1 To oDocument.Sheets.Count
		oDocument.Sheets(i).Activate
		osheet = oDocument.Sheets(i)
		'MessageBox.Show(osheet.Name)
		oTitleBlock=oDocument.Sheets(i).TitleBlock
		oTextBoxes=oTitleBlock.Definition.Sketch.TextBoxes
		For Each oTextBox In oTitleBlock.Definition.Sketch.TextBoxes
			' MessageBox.Show(otextbox.Text)
			If otextbox.Text <> "" Then
				Select oTextBox.Text
					Case "<Drawing Number>":
						DrawingNumber = oTitleBlock.GetResultText(oTextBox)
					Case "Drawing Prefix": 
						DrawingPrefix = oTitleBlock.GetResultText(oTextBox)
					Case "TITLE":
						DrawingTitle = oTitleBlock.GetResultText(oTextBox)
				End Select
			End If
		Next
		If Not DrawingNumber = String.empty And Not DrawingPrefix = String.empty Then
			PrintSheet(osheet, DrawingNumber, DrawingPrefix)
		Else
			MessageBox.Show("Either the Drawing Number or Prefix was missing on this sheet, Exiting!")
			Exit Sub
		End If
	Next
MessageBox.Show("Done!")
End Sub

Sub PrintSheet(ByVal sht As Sheet, ByVal DrawingNum as String, ByVal DrawingPrefix As String)
oPath = ThisDoc.Path
PN = iProperties.Value("Project", "Part Number")

'path_and_namePDF = ThisDoc.Pathandname(False)
oFileName = ThisDoc.FileName(False) 'without extension
oPDFAddIn = ThisApplication.ApplicationAddIns.ItemById("{0AC6FD96-2F4D-42CE-8BE0-8AEA580399E4}")
oDocument = ThisApplication.ActiveDocument
oContext = ThisApplication.TransientObjects.CreateTranslationContext
oContext.Type = IOMechanismEnum.kFileBrowseIOMechanism
oOptions = ThisApplication.TransientObjects.CreateNameValueMap
oDataMedium = ThisApplication.TransientObjects.CreateDataMedium
If oPDFAddIn.HasSaveCopyAsOptions(oDataMedium, oContext, oOptions) Then
	oOptions.Value("All_Color_AS_Black") = 1
	oOptions.Value("Remove_Line_Weights") = 1
	oOptions.Value("Vector_Resolution") = 400
	oOptions.Value("Sheet_Range") = Inventor.PrintRangeEnum.kPrintCurrentSheet
	'oOptions.Value("Custom_Begin_Sheet") = 1
	'oOptions.Value("Custom_End_Sheet") = 4
End If

'Set the destination file name 
REM oPath = "N:\INVENTOR PDF FILES\"
REM oPath = InputBox("Replace Path","New Path")
 
oDataMedium.FileName = oPath & "\" & DrawingNum & " " & DrawingPrefix & ".pdf"
'Publish document 
 'Confirmation message
 ThisApplication.StatusbarText = "PDF SAVED TO: " & oDataMedium.FileName
 'MessageBox.Show("PDF SAVED TO: " & oDataMedium.FileName, "PDF Saved", MessageBoxButtons.OK)
 


On Error Goto handlePDFLock
'Publish document.
Call oPDFAddIn.SaveCopyAs(oDocument, oContext, oOptions, oDataMedium)
'--------------------------------------------------------------------------------------------------------------------
Exit Sub
handlePDFLock: 
MessageBox.Show("PDF could not be saved, most likely you or someone else has it open", "No PDF for you " & ThisApplication.GeneralOptions.UserName & "!")
Resume Next

handleXLSLock: 
MessageBox.Show("No XLS", "iLogic")
Resume Next

End Sub
